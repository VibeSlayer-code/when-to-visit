{"ast":null,"code":"import { collection, addDoc, updateDoc, deleteDoc, doc, getDoc, getDocs, query, where, orderBy, serverTimestamp, limit } from 'firebase/firestore';\nimport { db } from './firebase';\n\n// Places\nexport const addPlace = async placeData => {\n  try {\n    // Remove undefined/null fields from placeData\n    const sanitizedData = Object.fromEntries(Object.entries(placeData).filter(([_, v]) => v !== undefined && v !== null));\n    const placesRef = collection(db, 'places');\n    const newPlace = {\n      ...sanitizedData,\n      createdAt: serverTimestamp(),\n      updatedAt: serverTimestamp()\n    };\n    // Extra debug logging\n    console.log('Attempting to add place:', newPlace);\n    const result = await addDoc(placesRef, newPlace);\n    console.log('Place added successfully:', result.id);\n    return result;\n  } catch (error) {\n    // Enhanced error logging\n    if (error && error.code && error.message) {\n      console.error(`Firestore error [${error.code}]: ${error.message}`);\n    } else {\n      console.error('Unknown error adding place:', error);\n    }\n    throw error;\n  }\n};\nexport const getPlaces = async () => {\n  try {\n    const placesRef = collection(db, 'places');\n    const q = query(placesRef, orderBy('name', 'asc'));\n    const querySnapshot = await getDocs(q);\n    return querySnapshot.docs.map(doc => ({\n      id: doc.id,\n      ...doc.data()\n    }));\n  } catch (error) {\n    console.error('Error getting places:', error);\n    throw error;\n  }\n};\nexport const getPlacesByCategory = async category => {\n  try {\n    const placesRef = collection(db, 'places');\n    const q = query(placesRef, where('category', '==', category), orderBy('name', 'asc'));\n    const querySnapshot = await getDocs(q);\n    return querySnapshot.docs.map(doc => ({\n      id: doc.id,\n      ...doc.data()\n    }));\n  } catch (error) {\n    console.error('Error getting places by category:', error);\n    throw error;\n  }\n};\n\n// Reports\nexport const addReport = async reportData => {\n  try {\n    const reportsRef = collection(db, 'reports');\n    const newReport = {\n      ...reportData,\n      timestamp: serverTimestamp(),\n      expiresAt: new Date(Date.now() + 2 * 60 * 60 * 1000) // 2 hours from now\n    };\n    return await addDoc(reportsRef, newReport);\n  } catch (error) {\n    console.error('Error adding report:', error);\n    throw error;\n  }\n};\nexport const getRecentReportsByPlace = async placeId => {\n  try {\n    const reportsRef = collection(db, 'reports');\n    const now = new Date();\n    const q = query(reportsRef, where('placeId', '==', placeId), where('expiresAt', '>', now), orderBy('expiresAt', 'desc'), orderBy('timestamp', 'desc'), limit(10));\n    const querySnapshot = await getDocs(q);\n    return querySnapshot.docs.map(doc => ({\n      id: doc.id,\n      ...doc.data()\n    }));\n  } catch (error) {\n    console.error('Error getting recent reports:', error);\n    throw error;\n  }\n};\nexport const getUserReports = async userId => {\n  try {\n    const reportsRef = collection(db, 'reports');\n    const q = query(reportsRef, where('userId', '==', userId), orderBy('timestamp', 'desc'));\n    const querySnapshot = await getDocs(q);\n    return querySnapshot.docs.map(doc => ({\n      id: doc.id,\n      ...doc.data()\n    }));\n  } catch (error) {\n    console.error('Error getting user reports:', error);\n    throw error;\n  }\n};\nexport const deleteReport = async reportId => {\n  try {\n    const reportRef = doc(db, 'reports', reportId);\n    await deleteDoc(reportRef);\n  } catch (error) {\n    console.error('Error deleting report:', error);\n    throw error;\n  }\n};","map":{"version":3,"names":["collection","addDoc","updateDoc","deleteDoc","doc","getDoc","getDocs","query","where","orderBy","serverTimestamp","limit","db","addPlace","placeData","sanitizedData","Object","fromEntries","entries","filter","_","v","undefined","placesRef","newPlace","createdAt","updatedAt","console","log","result","id","error","code","message","getPlaces","q","querySnapshot","docs","map","data","getPlacesByCategory","category","addReport","reportData","reportsRef","newReport","timestamp","expiresAt","Date","now","getRecentReportsByPlace","placeId","getUserReports","userId","deleteReport","reportId","reportRef"],"sources":["C:/Users/Vihaan/Desktop/When To Visit/src/services/firestoreService.js"],"sourcesContent":["import { \n  collection, \n  addDoc, \n  updateDoc, \n  deleteDoc, \n  doc, \n  getDoc, \n  getDocs, \n  query, \n  where, \n  orderBy, \n  serverTimestamp,\n  limit\n} from 'firebase/firestore';\nimport { db } from './firebase';\n\n// Places\nexport const addPlace = async (placeData) => {\n  try {\n    // Remove undefined/null fields from placeData\n    const sanitizedData = Object.fromEntries(\n      Object.entries(placeData).filter(([_, v]) => v !== undefined && v !== null)\n    );\n\n    const placesRef = collection(db, 'places');\n    const newPlace = {\n      ...sanitizedData,\n      createdAt: serverTimestamp(),\n      updatedAt: serverTimestamp()\n    };\n    // Extra debug logging\n    console.log('Attempting to add place:', newPlace);\n    const result = await addDoc(placesRef, newPlace);\n    console.log('Place added successfully:', result.id);\n    return result;\n  } catch (error) {\n    // Enhanced error logging\n    if (error && error.code && error.message) {\n      console.error(`Firestore error [${error.code}]: ${error.message}`);\n    } else {\n      console.error('Unknown error adding place:', error);\n    }\n    throw error;\n  }\n};\n\nexport const getPlaces = async () => {\n  try {\n    const placesRef = collection(db, 'places');\n    const q = query(placesRef, orderBy('name', 'asc'));\n    const querySnapshot = await getDocs(q);\n    \n    return querySnapshot.docs.map(doc => ({\n      id: doc.id,\n      ...doc.data()\n    }));\n  } catch (error) {\n    console.error('Error getting places:', error);\n    throw error;\n  }\n};\n\nexport const getPlacesByCategory = async (category) => {\n  try {\n    const placesRef = collection(db, 'places');\n    const q = query(\n      placesRef, \n      where('category', '==', category),\n      orderBy('name', 'asc')\n    );\n    const querySnapshot = await getDocs(q);\n    \n    return querySnapshot.docs.map(doc => ({\n      id: doc.id,\n      ...doc.data()\n    }));\n  } catch (error) {\n    console.error('Error getting places by category:', error);\n    throw error;\n  }\n};\n\n// Reports\nexport const addReport = async (reportData) => {\n  try {\n    const reportsRef = collection(db, 'reports');\n    const newReport = {\n      ...reportData,\n      timestamp: serverTimestamp(),\n      expiresAt: new Date(Date.now() + 2 * 60 * 60 * 1000) // 2 hours from now\n    };\n    return await addDoc(reportsRef, newReport);\n  } catch (error) {\n    console.error('Error adding report:', error);\n    throw error;\n  }\n};\n\nexport const getRecentReportsByPlace = async (placeId) => {\n  try {\n    const reportsRef = collection(db, 'reports');\n    const now = new Date();\n    \n    const q = query(\n      reportsRef,\n      where('placeId', '==', placeId),\n      where('expiresAt', '>', now),\n      orderBy('expiresAt', 'desc'),\n      orderBy('timestamp', 'desc'),\n      limit(10)\n    );\n    \n    const querySnapshot = await getDocs(q);\n    \n    return querySnapshot.docs.map(doc => ({\n      id: doc.id,\n      ...doc.data()\n    }));\n  } catch (error) {\n    console.error('Error getting recent reports:', error);\n    throw error;\n  }\n};\n\nexport const getUserReports = async (userId) => {\n  try {\n    const reportsRef = collection(db, 'reports');\n    const q = query(\n      reportsRef,\n      where('userId', '==', userId),\n      orderBy('timestamp', 'desc')\n    );\n    \n    const querySnapshot = await getDocs(q);\n    \n    return querySnapshot.docs.map(doc => ({\n      id: doc.id,\n      ...doc.data()\n    }));\n  } catch (error) {\n    console.error('Error getting user reports:', error);\n    throw error;\n  }\n};\n\nexport const deleteReport = async (reportId) => {\n  try {\n    const reportRef = doc(db, 'reports', reportId);\n    await deleteDoc(reportRef);\n  } catch (error) {\n    console.error('Error deleting report:', error);\n    throw error;\n  }\n};\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}