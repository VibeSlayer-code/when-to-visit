{"ast":null,"code":"import { collection, addDoc, updateDoc, deleteDoc, doc, getDoc, getDocs, query, where, orderBy, serverTimestamp, limit } from 'firebase/firestore';\nimport { db } from './firebase';\n\n// Places\nexport const addPlace = async placeData => {\n  try {\n    const placesRef = collection(db, 'places');\n    const newPlace = {\n      ...placeData,\n      createdAt: serverTimestamp(),\n      updatedAt: serverTimestamp()\n    };\n    return await addDoc(placesRef, newPlace);\n  } catch (error) {\n    console.error('Error adding place:', error);\n    throw error;\n  }\n};\nexport const getPlaces = async () => {\n  try {\n    const placesRef = collection(db, 'places');\n    const q = query(placesRef, orderBy('name', 'asc'));\n    const querySnapshot = await getDocs(q);\n    return querySnapshot.docs.map(doc => ({\n      id: doc.id,\n      ...doc.data()\n    }));\n  } catch (error) {\n    console.error('Error getting places:', error);\n    throw error;\n  }\n};\nexport const getPlacesByCategory = async category => {\n  try {\n    const placesRef = collection(db, 'places');\n    const q = query(placesRef, where('category', '==', category), orderBy('name', 'asc'));\n    const querySnapshot = await getDocs(q);\n    return querySnapshot.docs.map(doc => ({\n      id: doc.id,\n      ...doc.data()\n    }));\n  } catch (error) {\n    console.error('Error getting places by category:', error);\n    throw error;\n  }\n};\n\n// Reports\nexport const addReport = async reportData => {\n  try {\n    const reportsRef = collection(db, 'reports');\n    const newReport = {\n      ...reportData,\n      timestamp: serverTimestamp(),\n      expiresAt: new Date(Date.now() + 2 * 60 * 60 * 1000) // 2 hours from now\n    };\n    return await addDoc(reportsRef, newReport);\n  } catch (error) {\n    console.error('Error adding report:', error);\n    throw error;\n  }\n};\nexport const getRecentReportsByPlace = async placeId => {\n  try {\n    const reportsRef = collection(db, 'reports');\n    const now = new Date();\n    const q = query(reportsRef, where('placeId', '==', placeId), where('expiresAt', '>', now), orderBy('expiresAt', 'desc'), orderBy('timestamp', 'desc'), limit(10));\n    const querySnapshot = await getDocs(q);\n    return querySnapshot.docs.map(doc => ({\n      id: doc.id,\n      ...doc.data()\n    }));\n  } catch (error) {\n    console.error('Error getting recent reports:', error);\n    throw error;\n  }\n};\nexport const getUserReports = async userId => {\n  try {\n    const reportsRef = collection(db, 'reports');\n    const q = query(reportsRef, where('userId', '==', userId), orderBy('timestamp', 'desc'));\n    const querySnapshot = await getDocs(q);\n    return querySnapshot.docs.map(doc => ({\n      id: doc.id,\n      ...doc.data()\n    }));\n  } catch (error) {\n    console.error('Error getting user reports:', error);\n    throw error;\n  }\n};\nexport const deleteReport = async reportId => {\n  try {\n    const reportRef = doc(db, 'reports', reportId);\n    await deleteDoc(reportRef);\n  } catch (error) {\n    console.error('Error deleting report:', error);\n    throw error;\n  }\n};","map":{"version":3,"names":["collection","addDoc","updateDoc","deleteDoc","doc","getDoc","getDocs","query","where","orderBy","serverTimestamp","limit","db","addPlace","placeData","placesRef","newPlace","createdAt","updatedAt","error","console","getPlaces","q","querySnapshot","docs","map","id","data","getPlacesByCategory","category","addReport","reportData","reportsRef","newReport","timestamp","expiresAt","Date","now","getRecentReportsByPlace","placeId","getUserReports","userId","deleteReport","reportId","reportRef"],"sources":["C:/Users/Vihaan/Desktop/When To Visit/src/services/firestoreService.js"],"sourcesContent":["import { \n  collection, \n  addDoc, \n  updateDoc, \n  deleteDoc, \n  doc, \n  getDoc, \n  getDocs, \n  query, \n  where, \n  orderBy, \n  serverTimestamp,\n  limit\n} from 'firebase/firestore';\nimport { db } from './firebase';\n\n// Places\nexport const addPlace = async (placeData) => {\n  try {\n    const placesRef = collection(db, 'places');\n    const newPlace = {\n      ...placeData,\n      createdAt: serverTimestamp(),\n      updatedAt: serverTimestamp()\n    };\n    return await addDoc(placesRef, newPlace);\n  } catch (error) {\n    console.error('Error adding place:', error);\n    throw error;\n  }\n};\n\nexport const getPlaces = async () => {\n  try {\n    const placesRef = collection(db, 'places');\n    const q = query(placesRef, orderBy('name', 'asc'));\n    const querySnapshot = await getDocs(q);\n    \n    return querySnapshot.docs.map(doc => ({\n      id: doc.id,\n      ...doc.data()\n    }));\n  } catch (error) {\n    console.error('Error getting places:', error);\n    throw error;\n  }\n};\n\nexport const getPlacesByCategory = async (category) => {\n  try {\n    const placesRef = collection(db, 'places');\n    const q = query(\n      placesRef, \n      where('category', '==', category),\n      orderBy('name', 'asc')\n    );\n    const querySnapshot = await getDocs(q);\n    \n    return querySnapshot.docs.map(doc => ({\n      id: doc.id,\n      ...doc.data()\n    }));\n  } catch (error) {\n    console.error('Error getting places by category:', error);\n    throw error;\n  }\n};\n\n// Reports\nexport const addReport = async (reportData) => {\n  try {\n    const reportsRef = collection(db, 'reports');\n    const newReport = {\n      ...reportData,\n      timestamp: serverTimestamp(),\n      expiresAt: new Date(Date.now() + 2 * 60 * 60 * 1000) // 2 hours from now\n    };\n    return await addDoc(reportsRef, newReport);\n  } catch (error) {\n    console.error('Error adding report:', error);\n    throw error;\n  }\n};\n\nexport const getRecentReportsByPlace = async (placeId) => {\n  try {\n    const reportsRef = collection(db, 'reports');\n    const now = new Date();\n    \n    const q = query(\n      reportsRef,\n      where('placeId', '==', placeId),\n      where('expiresAt', '>', now),\n      orderBy('expiresAt', 'desc'),\n      orderBy('timestamp', 'desc'),\n      limit(10)\n    );\n    \n    const querySnapshot = await getDocs(q);\n    \n    return querySnapshot.docs.map(doc => ({\n      id: doc.id,\n      ...doc.data()\n    }));\n  } catch (error) {\n    console.error('Error getting recent reports:', error);\n    throw error;\n  }\n};\n\nexport const getUserReports = async (userId) => {\n  try {\n    const reportsRef = collection(db, 'reports');\n    const q = query(\n      reportsRef,\n      where('userId', '==', userId),\n      orderBy('timestamp', 'desc')\n    );\n    \n    const querySnapshot = await getDocs(q);\n    \n    return querySnapshot.docs.map(doc => ({\n      id: doc.id,\n      ...doc.data()\n    }));\n  } catch (error) {\n    console.error('Error getting user reports:', error);\n    throw error;\n  }\n};\n\nexport const deleteReport = async (reportId) => {\n  try {\n    const reportRef = doc(db, 'reports', reportId);\n    await deleteDoc(reportRef);\n  } catch (error) {\n    console.error('Error deleting report:', error);\n    throw error;\n  }\n};\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}